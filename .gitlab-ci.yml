image: gbaulieu/ubuntu-root:v2

build:
  stage: build
  # instead of calling g++ directly you can also use some build toolkit like make
  # install the necessary build tools when needed
  before_script: 
  script: 
    - sed -i s/CMSSW_ENABLED=true/CMSSW_ENABLED=false/ Makefile
    - export ROOTSYS=/opt/root/
    - export PATH=/opt/root/bin/:$PATH
    - export LD_LIBRARY_PATH=/opt/root/lib/:$LD_LIBRARY_PATH
    - make -j 4
    - make tests
    - cd tools/mergeSectors
    - sed -i s/CMSSW_ENABLED=true/CMSSW_ENABLED=false/ Makefile
    - make
    - cd ../comparePatterns
    - sed -i s/CMSSW_ENABLED=true/CMSSW_ENABLED=false/ Makefile
    - make
    - cd ../..
  artifacts:
    paths:
      - AMSimulation
      - UnitTest
      - tools/mergeSectors/mergeSectors
      - tools/comparePatterns/comparePatterns

# run tests using the binary built before
test:
  stage: test
  script:
    - export ROOTSYS=/opt/root/
    - export PATH=/opt/root/bin/:$PATH
    - export LD_LIBRARY_PATH=/opt/root/lib/:$LD_LIBRARY_PATH
    - ./AMSimulation --help
    - ./UnitTest
    - ./tools/mergeSectors/mergeSectors ./test_data/PU4T_sample.root
    - ./tools/comparePatterns/comparePatterns test_data/PU4T_ref.root test_data/PU4T_sample.root
